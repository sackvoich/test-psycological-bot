from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from database import save_user_info, save_mood_history, get_mood_history  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏—Å—Ç–æ—Ä–∏–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
from handlers.menu import main_menu_keyboard  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é

router = Router()

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤—ã–±–æ—Ä–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
buttons = [
    [KeyboardButton(text="üòä –•–æ—Ä–æ—à–µ–µ")],
    [KeyboardButton(text="üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ")],
    [KeyboardButton(text="üòî –ü–ª–æ—Ö–æ–µ")]
]
mood_keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

@router.message(Command("mood"))
async def ask_mood(message: types.Message):
    await message.answer("–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–≥–æ–¥–Ω—è?", reply_markup=mood_keyboard)

@router.message(F.text.in_({"üòä –•–æ—Ä–æ—à–µ–µ", "üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ", "üòî –ü–ª–æ—Ö–æ–µ"}))
async def receive_mood(message: types.Message):
    mood = message.text
    user_id = message.from_user.id

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    save_user_info(user_id=user_id, mood=mood)
    save_mood_history(user_id, mood)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é

    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    mood_history = get_mood_history(user_id)

    # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
    if mood == "üòä –•–æ—Ä–æ—à–µ–µ":
        greeting = f"–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –†–∞–¥, —á—Ç–æ —É —Ç–µ–±—è —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –±—É–¥–µ—Ç –ø–æ–º–æ—â—å, —è –∑–¥–µ—Å—å."
    elif mood == "üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ":
        greeting = f"–ü–æ–Ω—è—Ç–Ω–æ. –ù–∞–¥–µ—é—Å—å, —è —Å–º–æ–≥—É —Ç–µ–±–µ —á–µ–º-—Ç–æ –ø–æ–º–æ—á—å."
    else:
        greeting = f"–ú–Ω–µ –∂–∞–ª—å, —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –ø–ª–æ—Ö–æ. –ü–æ–º–Ω–∏, —á—Ç–æ —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ç–µ–±—è. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ –≤–º–µ—Å—Ç–µ."

        # –ï—Å–ª–∏ –ø–ª–æ—Ö–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –º–æ–∂–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã
        from handlers.resources import send_resources
        await send_resources(message)

    await message.answer(
        f"{greeting}\n\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è(–ª–∞—Å—å) —Å–≤–æ–∏–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º: {mood}",
        reply_markup=ReplyKeyboardRemove()
    )

    # –í—ã–≤–æ–¥–∏–º –∏—Å—Ç–æ—Ä–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if mood_history:
        history_str = "–¢–≤–æ–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è:\n"
        for m, t in mood_history:
            history_str += f"- {t.strftime('%Y-%m-%d %H:%M')}: {m}\n"
        await message.answer(history_str)

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:", reply_markup=main_menu_keyboard)