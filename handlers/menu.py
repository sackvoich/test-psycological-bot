from aiogram import Router, types, F
from aiogram.filters import Command
import logging
from keyboards.menu_keyboards import main_menu_keyboard, back_to_menu_keyboard  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
from aiogram.fsm.context import FSMContext # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º FSMContext
from handlers.states import ChatState  # <--- –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ ChatState


router = Router()
router.name = 'menu'

@router.message(Command("menu"))
async def show_menu(message: types.Message):
    logging.info("Menu command invoked")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:", reply_markup=main_menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º
@router.message(lambda message: message.text in ["üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã", "üí° –°–æ–≤–µ—Ç—ã", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", "üòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "üÜò –ü–æ–º–æ—â—å", "üë®‚Äç‚öïÔ∏è –ß–∞—Ç —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º"])
async def handle_menu_buttons(message: types.Message, state: FSMContext):
    logging.info(f"Button pressed: {message.text}")
    current_state = await state.get_state()

    if current_state is None: # –ï—Å–ª–∏ –Ω–µ –≤ —á–∞—Ç–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
        if message.text == "üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã":
            from handlers.resources import send_resources  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ—Å—É—Ä—Å–æ–≤
            await send_resources(message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
        elif message.text == "üí° –°–æ–≤–µ—Ç—ã":
            from handlers.tips import send_tips  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–≤–µ—Ç–æ–≤
            await send_tips(message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–≤–µ—Ç–æ–≤
        elif message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
            from handlers.contact import send_contact  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
            await send_contact(message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        elif message.text == "üòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ":
            from handlers.mood import ask_mood  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
            await ask_mood(message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
        elif message.text == "üÜò –ü–æ–º–æ—â—å":
            from handlers.help import send_help  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–º–æ—â–∏
            await send_help(message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–º–æ—â–∏
        elif message.text == "üë®‚Äç‚öïÔ∏è –ß–∞—Ç —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º" and current_state != ChatState.CHAT.state: # –ï—Å–ª–∏ –≤ —á–∞—Ç–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
            from handlers.chat import start_chat  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–∞—Ç–∞
            await start_chat(message, state)  # –ó–∞–ø—É—Å–∫–∞–µ–º —á–∞—Ç
        
@router.message(F.text == "‚è™ –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
async def back_to_main_menu(message: types.Message, state: FSMContext):
    await state.clear() # –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –≤ —á–∞—Ç–µ
    await show_menu(message)
