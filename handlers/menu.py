from aiogram import Router, types
from aiogram.filters import Command
import logging

router = Router()
router.name = 'menu'

# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é —Å —ç–º–æ–¥–∑–∏
main_menu_keyboard = types.ReplyKeyboardMarkup(
    keyboard=[
        [types.KeyboardButton(text="üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã")],
        [types.KeyboardButton(text="üí° –°–æ–≤–µ—Ç—ã")],
        [types.KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")],
        [types.KeyboardButton(text="üòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ")],
        [types.KeyboardButton(text="üÜò –ü–æ–º–æ—â—å")],
        [types.KeyboardButton(text="üë®‚Äç‚öïÔ∏è –ß–∞—Ç —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º")]
    ],
    resize_keyboard=True
)

@router.message(Command("menu"))
async def show_menu(message: types.Message):
    logging.info("Menu command invoked")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:", reply_markup=main_menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º
@router.message(lambda message: message.text in ["üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã", "üí° –°–æ–≤–µ—Ç—ã", "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", "üòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "üÜò –ü–æ–º–æ—â—å", "üë®‚Äç‚öïÔ∏è –ß–∞—Ç —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º"])
async def handle_menu_buttons(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —á–∞—Ç–µ
    from handlers.chat import active_chats
    if message.from_user.id in active_chats:
        logging.info(f"User in chat tried to access menu: {message.text}")
        return

    logging.info(f"Button pressed: {message.text}")

    if message.text == "üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã":
        from handlers.resources import send_resources  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ—Å—É—Ä—Å–æ–≤
        await send_resources(message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
    elif message.text == "üí° –°–æ–≤–µ—Ç—ã":
        from handlers.tips import send_tips  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–≤–µ—Ç–æ–≤
        await send_tips(message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–≤–µ—Ç–æ–≤
    elif message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        from handlers.contact import send_contact  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        await send_contact(message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    elif message.text == "üòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ":
        from handlers.mood import ask_mood  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
        await ask_mood(message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
    elif message.text == "üÜò –ü–æ–º–æ—â—å":
        from handlers.help import send_help  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–º–æ—â–∏
        await send_help(message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–º–æ—â–∏
    elif message.text == "üë®‚Äç‚öïÔ∏è –ß–∞—Ç —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º":
        from handlers.chat import start_chat  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á–∞—Ç–∞
        await start_chat(message)  # –ó–∞–ø—É—Å–∫–∞–µ–º —á–∞—Ç
